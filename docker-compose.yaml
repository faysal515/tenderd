version: '3.8'

services:
  mongo:
    image: mongo
    platform: linux/arm64
    restart: always
    ports:
      - '27017:27017'
    networks:
      - app-network

  zookeeper:
    image: bitnami/zookeeper:latest
    platform: linux/arm64
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:latest
    platform: linux/arm64
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_MESSAGE_MAX_BYTES=200000000
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=200000000
      - KAFKA_CFG_MAX_REQUEST_SIZE=200000000
    ports:
      - "9092:9092"
      - "29092:29092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongo:27017/tenderd
      - PORT=3000
      - RUN_SIMULATION=true
      - KAFKA_BROKER=kafka:9092
      - KAFKA_CLIENT_ID=sensor-simulator
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - '3000:3000'
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    ports:
      - '3001:3000'
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge